export let AccountStatus: typeof import("./lib/accountstatus");
export let AllData: typeof import("./lib/alldata");
export let BusinessPartner: typeof import("./lib/businesspartner");
export let Err: {
    NIP_EMPTY: number;
    NIP_UNKNOWN: number;
    GUS_LOGIN: number;
    GUS_CAPTCHA: number;
    GUS_SYNC: number;
    NIP_UPDATE: number;
    NIP_BAD: number;
    CONTENT_SYNTAX: number;
    NIP_NOT_ACTIVE: number;
    INVALID_PATH: number;
    EXCEPTION: number;
    NO_PERMISSION: number;
    GEN_INVOICES: number;
    GEN_SPEC_INV: number;
    SEND_INVOICE: number;
    PREMIUM_FEATURE: number;
    SEND_ANNOUNCEMENT: number;
    INVOICE_PAYMENT: number;
    REGON_BAD: number;
    SEARCH_KEY_EMPTY: number;
    KRS_BAD: number;
    EUVAT_BAD: number;
    VIES_SYNC: number;
    CEIDG_SYNC: number;
    RANDOM_NUMBER: number;
    PLAN_FEATURE: number;
    SEARCH_TYPE: number;
    PPUMF_SYNC: number;
    PPUMF_DIRECT: number;
    NIP_FEATURE: number;
    REGON_FEATURE: number;
    KRS_FEATURE: number;
    TEST_MODE: number;
    ACTIVITY_CHECK: number;
    ACCESS_DENIED: number;
    MAINTENANCE: number;
    BILLING_PLANS: number;
    DOCUMENT_PDF: number;
    EXPORT_PDF: number;
    RANDOM_TYPE: number;
    LEGAL_FORM: number;
    GROUP_CHECKS: number;
    CLIENT_COUNTERS: number;
    URE_SYNC: number;
    URE_DATA: number;
    DKN_BAD: number;
    SEND_REMAINDER: number;
    EXPORT_JPK: number;
    GEN_ORDER_INV: number;
    SEND_EXPIRATION: number;
    IBAN_SYNC: number;
    ORDER_CANCEL: number;
    WHITELIST_CHECK: number;
    AUTH_TIMESTAMP: number;
    AUTH_MAC: number;
    IBAN_BAD: number;
    DB_AUTH_IP: number;
    DB_AUTH_KEY_STATUS: number;
    DB_AUTH_KEY_VALUE: number;
    DB_AUTH_OVER_PLAN: number;
    DB_CLIENT_LOCKED: number;
    DB_CLIENT_TYPE: number;
    DB_CLIENT_NOT_PAID: number;
    DB_AUTH_KEYID_VALUE: number;
    CLI_CONNECT: number;
    CLI_RESPONSE: number;
    CLI_NUMBER: number;
    CLI_NIP: number;
    CLI_REGON: number;
    CLI_KRS: number;
    CLI_EUVAT: number;
    CLI_IBAN: number;
    CLI_EXCEPTION: number;
    CLI_DATEFORMAT: number;
    CLI_INPUT: number;
    message: (code: number) => string | null;
};
export let EUVAT: {
    normalize: (number: string) => string;
    isValid: (number: string) => boolean;
};
export let IBAN: {
    normalize: (iban: string) => string;
    isValid: (iban: string) => boolean;
};
export let IBANStatus: typeof import("./lib/ibanstatus");
export let InvoiceData: typeof import("./lib/invoicedata");
export let KRS: {
    normalize: (krs: string) => string;
    isValid: (krs: string) => boolean;
};
export let NIP: {
    normalize: (nip: string) => string;
    isValid: (nip: string) => boolean;
};
export let NIP24Client: typeof import("./lib/nip24client");
export let Number: {
    NIP: number;
    REGON: number;
    KRS: number;
    EUVAT: number;
    IBAN: number;
};
export let PKD: typeof import("./lib/pkd");
export let REGON: {
    normalize: (regon: string) => string;
    isValid: (regon: string) => boolean;
};
export let SearchResult: typeof import("./lib/searchresult");
export let VATEntity: typeof import("./lib/vatentity");
export let VATPerson: typeof import("./lib/vatperson");
export let VATStatus: typeof import("./lib/vatstatus");
export let VIESData: typeof import("./lib/viesdata");
export let WLStatus: typeof import("./lib/wlstatus");
